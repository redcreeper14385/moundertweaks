plugins {
	id 'fabric-loom' version '0.4-SNAPSHOT'
	id 'maven-publish'
	id 'com.matthewprenger.cursegradle' version '1.4.0'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

def getProjectStatus() {
	if (project.mod_version.contains("pre")) {
		return "beta"
	}
	else if (project.mod_version.contains("alpha")) {
		return "alpha"
	}
	return "release"
}

repositories{
	maven {
		url = 'https://raw.githubusercontent.com/Szum123321/SzumMaven/master/'
	}
	jcenter()
}

dependencies {
	minecraft("com.mojang:minecraft:${project.minecraft_version}")
	mappings("net.fabricmc:yarn:${project.yarn_mappings}:v2")
	modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")

	modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")

	// Tool Action Helper (shovel, hoe and axe ability API)
	modImplementation("net.szum123321:tool_action_helper:1.0.1")
	include("net.szum123321:tool_action_helper:1.0.1")

	// Auto Config
	modApi("me.sargunvohra.mcmods:autoconfig1u:3.2.0-unstable") {
        exclude(group: "net.fabricmc.fabric-api")
    }
	include "me.sargunvohra.mcmods:autoconfig1u:3.2.0-unstable"

	// Cloth Config
	modApi("me.shedaniel.cloth:config-2:4.7.0-unstable") {
        exclude(group: "net.fabricmc.fabric-api")
    }
	include("me.shedaniel.cloth:config-2:4.7.0-unstable")

	// Modmenu
	modApi("io.github.prospector:modmenu:${project.modmenu_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	compileOnly("org.jetbrains:annotations:16.0.2")
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}

curseforge {
	if (project.hasProperty('curse_api_key')) {
		apiKey = project.getProperty('curse_api_key')
	}
	project {
		id = '404512'
		changelog = 'A changelog can be found at https://github.com/redcreeper14385/moundertweaks/commits'
		releaseType = getProjectStatus()
		addGameVersion "${project.minecraft_version}"
		addGameVersion 'Fabric'
		mainArtifact(file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar")) {
			displayName = "[${project.minecraft_version}] MounderTweaks ${version}"
		}
		afterEvaluate {
			uploadTask.dependsOn("remapJar")
		}
	}
	options {
		forgeGradleIntegration = false
	}
}
